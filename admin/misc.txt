# authorship statement but no creator

select distinct ?w ?as {
  ?w :authorshipStatement ?as .
  ?wadm adm:adminAbout ?w ;
        adm:metadataLegal bda:LD_BDRC_CC0 ;
        adm:status bda:StatusReleased .
  ?w bdo:instanceOf ?wa .
  FILTER NOT EXISTS {?wa :creator ?c}
}

# biographies with no attached person

T1CZ60 / T3 / T208 / T413

select distinct ?wa ?title {
  #VALUES ?t {bdr:T208 bdr:T413}
  ?wa :workGenre bdr:T208 .
  #FILTER NOT EXISTS {?wa :workIsAbout/rdf:type bdo:Person}
  FILTER NOT EXISTS {?wa :workIsAbout ?p}
  ?wadm adm:adminAbout ?wa ;
        adm:metadataLegal bda:LD_BDRC_CC0 ;
        adm:status bda:StatusReleased .
  ?wa skos:prefLabel ?title .
  FILTER (lang(?title) = "bo-x-ewts")
}

# persons with the same birth and death dates

select ?p1 ?p2 ?p1label ?p2label
where {
  ?p1b a bdo:PersonBirth ;
     :onYear ?p1by .
  ?p1 :personEvent ?p1b .
  ?p2b  :onYear ?p1by  ;
     a bdo:PersonBirth .
  ?p2 :personEvent ?p2b .
  filter (?p1 != ?p2)
  ?p1 :personEvent ?p1d .
  ?p1d a bdo:PersonDeath ;
       :onYear ?p1dy .
  ?p2 :personEvent ?p2d .
  ?p2d a bdo:PersonDeath ;
       :onYear ?p1dy .
  ?p1 skos:prefLabel ?p1label .
  filter(lang(?p1label) = "bo-x-ewts")
  ?p2 skos:prefLabel ?p2label .
  filter(lang(?p2label) = "bo-x-ewts")
}

# number of volumes

select (count(?i) as ?nbvol) where {
  ?i a :ImageGroup ;
     :volumePagesTotal ?vpt ;
     :volumeOf ?w .
  FILTER (?vpt > 3)
  ?iadm adm:adminAbout ?i ;
      adm:status    bda:StatusReleased .
  ?wadm adm:adminAbout ?w ;
        adm:status    bda:StatusReleased ;
        adm:metadataLegal  bda:LD_BDRC_CC0 .
}

# list volumes with less than 3 images (TODO)

# number of volumes synced between ?date1 and ?date2 for the first time (TODO)

# list possible duplicates: P0RK + disciples of the same master who are not P0RK

select ?p ?pl ?od ?odl 
WHERE 
{
  ?lg adm:logWho bdu:U00023 .
  ?padm adm:logEntry ?lg ;
        adm:adminAbout ?p ;
        adm:status bda:StatusReleased .
  ?p a bdo:Person ;
     bdo:personStudentOf ?t .
  ?t bdo:personTeacherOf ?od .
  ?odadm adm:adminAbout ?od .
  FILTER (NOT EXISTS {?odadm adm:logEntry/adm:logWho bdu:U00023})
  ?od skos:prefLabel ?odl .
  ?p skos:prefLabel ?pl .
  FILTER (lang(?pl) = "bo-x-ewts")
  FILTER (lang(?odl) = "bo-x-ewts")
} limit 2000

select ?p ?label ?nt
where {
   (?n ?sc ?nt) text:query ( bdo:noteText "duplicate"@en ) .
   ?p bdo:note ?n ;
      a bdo:Person .
   ?adm adm:adminAbout ?p ;
        adm:status bda:StatusWithdrawn .
   FILTER NOT EXISTS {?adm adm:replaceWith ?po .}
}

# NLM works spreadsheet

select ?i ?ilabel ?po ?arid ?alabel ?topic ?genre ?printeryrid ?printerylabel where {
  {  
    ?ii bdo:inCollection  bdr:PR1NLM00 .
    ?iiadm adm:adminAbout ?ii ;
           adm:status bda:StatusReleased .
    ?ii bdo:instanceReproductionOf ?i .
    ?i skos:prefLabel ?ilabel .
    FILTER (lang(?ilabel) = "bo-x-ewts")
  } union {
    ?ii bdo:inCollection  bdr:PR1NLM00 .
    ?iiadm adm:adminAbout ?ii ;
           adm:status bda:StatusReleased .
    ?ii bdo:instanceOf ?w .
    ?w bdo:creator ?aac .
    ?aac bdo:role bdr:R0ER0019 ;
         bdo:agent ?arid .
    ?arid skos:prefLabel ?alabel .
    FILTER (lang(?alabel) = "bo-x-ewts")
  } union {
    ?ii bdo:inCollection  bdr:PR1NLM00 .
    ?iiadm adm:adminAbout ?ii ;
           adm:status bda:StatusReleased .
    ?ii bdo:instanceOf ?w .
    ?w bdo:genre ?genre .
  } union {
    ?ii bdo:inCollection  bdr:PR1NLM00 .
    ?iiadm adm:adminAbout ?ii ;
           adm:status bda:StatusReleased .
    ?ii bdo:instanceOf ?w .
    ?w bdo:topic ?topic .
  }
   union {
    ?ii bdo:inCollection  bdr:PR1NLM00 .
    ?iiadm adm:adminAbout ?ii ;
           adm:status bda:StatusReleased .
    ?ii bdo:instanceReproductionOf ?i .
    ?i bdo:hasSourcePrintery ?printeryrid .
    ?printeryrid skos:prefLabel ?printerylabel .
    FILTER (lang(?printerylabel) = "bo-x-ewts")
  }
}

# copyrighted works scanned at LTWA

#Bibliographic Note

select ?w ?title ?pubname ?ntext where {
  {
    (?w ?sc ?si) text:query ( bdo:scanInfo "satluj"@en ) .
    ?wadm adm:adminAbout ?w ;
          adm:access bda:AccessFairUse .
    ?w bdo:scanInfo ?ntext .
    FILTER(?ntext != ?si)
    ?w bdo:instanceReproductionOf ?i .
    ?i skos:prefLabel ?title ;
       bdo:publisherName ?pubname .
  } union {
    (?w ?sc ?si) text:query ( bdo:scanInfo "satluj"@en ) .
    ?wadm adm:adminAbout ?w ;
          adm:access bda:AccessFairUse .
    FILTER NOT EXISTS { ?w bdo:scanInfo ?osi . FILTER(?osi != ?si) }
    ?w bdo:instanceReproductionOf ?i .
    ?i skos:prefLabel ?title ;
       bdo:publisherName ?pubname .
    ?i bdo:note ?n .
    ?n bdo:noteText ?ntext .
  } union {
    (?w ?sc ?si) text:query ( bdo:scanInfo "satluj"@en ) .
    ?wadm adm:adminAbout ?w ;
          adm:access bda:AccessFairUse .
    FILTER NOT EXISTS { ?w bdo:scanInfo ?osi . FILTER(?osi != ?si) }
    ?w bdo:instanceReproductionOf ?i .
    FILTER NOT EXISTS { ?i bdo:note ?n }
  }
}

# duplicates on Wikidata

select ?wdold ?old ?wdnew ?new {
  ?oldAdm adm:replaceWith ?new ;
          adm:adminAbout ?old .
  ?old owl:sameAs ?wdold .
  FILTER(regex(str(?wdold), "^http://www.wikidata"))
  #?new owl:sameAs ?wdnew .
  #FILTER(regex(str(?wdnew), "^http://www.wikidata"))
}

# list scan-volumes of openpecha

select distinct ?w ?i where {
  ?resRepAdm adm:syncAgent  bdr:SAOPT .
  ?resRepAdm adm:adminAbout/bdo:instanceReproductionOf ?w .
  ?w a bdo:ImageInstance .
  ?wadm adm:adminAbout ?w ;
        adm:status bda:StatusReleased ;
        adm:access bda:AccessOpen .
  FILTER NOT EXISTS {?wadm adm:restrictedInChina true}
  ?w bdo:instanceReproductionOf/bdo:printMethod bdr:PrintMethod_Modern .
  ?w bdo:instanceHasVolume ?i .
}

# persons' birth and death dates, with affiliation

select distinct ?p ?pname ?bdate ?ddate ?seat where {
  {
    ?p :personEvent ?birth .
    FILTER NOT EXISTS {?p :personEvent/rdf:type bdo:PersonOccupiesSeat}
    ?birth a :PersonBirth ;
           bdo:onYear ?bdate .
    ?p :personEvent ?death .
    ?death a :PersonDeath ;
           bdo:onYear ?ddate .
    ?p skos:prefLabel ?pname .
  } union {
    ?p :personEvent ?os .
    ?os a :PersonOccupiesSeat ;
        :eventWhere ?seat .
    ?p :personEvent ?birth .
    ?birth a :PersonBirth ;
           bdo:onYear ?bdate .
    ?p :personEvent ?death .
    ?death a :PersonDeath ;
           bdo:onYear ?ddate .
    ?p skos:prefLabel ?pname .
  }
}

# NGMPP authors, works and instances:

  select distinct (count(distinct ?wa) as ?cwa) (count (distinct ?mw) as ?cmw)  (count (distinct ?p) as ?cp) where {
    bda:ADMNMGCP adm:adminAbout ?mw .
    ?mw a bdo:Instance .
    ?mw :instanceOf ?wa .
    ?wa :creator/:agent ?p .
    ?p tmp:associatedCentury 20 .
  }

# number of authors with sungbum

  select (count(distinct ?p) as ?cp) where {
    {
      ?wa bdo:workGenre bdr:T208 .
    } union {
      ?wa bdo:workIsAbout bdr:T208 .
    }
    ?wa bdo:creator ?aac .
    ?aac bdo:role bdr:R0ER0019 ;
         bdo:agent ?p .
  }

# number of volumes per scanInfo keyword

select (sum(?nbv) as ?nbvt) where {
   #?w bdo:inCollection bdr:PR1PL480 .
   ?w text:query ( bdo:scanInfo "\"Fragile Palm Leaves Foundation\""@en ) .
   #?w bdo:scanInfo "This manuscript was digitized at the Fragile Palm Leaves Foundation in Thailand with the generous support of Khyentse Foundation"@en ;
   ?w  bdo:numberOfVolumes ?nbv ;
       tmp:thumbnailIIIFService ?th .
   ?wadm adm:adminAbout ?w ;
       adm:contentLegal bda:LD_BDRC_PD ;
       adm:restrictedInChina false ;
       adm:access bda:AccessOpen ;
       adm:status bda:StatusReleased .
}

# total number of volumes

select (count (distinct ?ig) as ?igt) where {
   ?w a bdo:ImageInstance .
   ?w tmp:thumbnailIIIFService ?th .
   ?wadm adm:adminAbout ?w ;
        adm:contentLegal bda:LD_BDRC_PD ;
        adm:restrictedInChina false ;
        adm:access bda:AccessOpen ;
        adm:status bda:StatusReleased .
   ?w bdo:instanceHasVolume ?ig .
}

# outline in csv

select ?title ?titlebo ?bvol ?bpage ?epage WHERE 
{
  ?mw :partOf+ bdr:MW21727 ;
      :partType bdr:PartTypeText ;
      :partTreeIndex ?pti ;
      :contentLocation ?cl ;
      skos:prefLabel ?title .
  BIND(f:ewtsToUnicode(?title) as ?titlebo)
  ?cl :contentLocationPage ?bpage ;
      :contentLocationEndPage ?epage ;
      :contentLocationVolume ?bvol .
} order by ?pti


# non-ric instances about ric entities

select distinct ?rootmw ?rootmwlabel ?mw ?mwlabel ?t ?tlabel where {
  {
  
    #VALUES ?t { bdr:T1KG24262 bdr:T2KG207970 bdr:T1201 bdr:T1KG16182 bdr:T1151 bdr:T2MS13833 bdr:T2331 bdr:T2223 bdr:T8LS1426 bdr:T1KG16182 bdr:T1969 bdr:T8LS16960 }
    ?tadm adm:restrictedInChina true ;
          adm:adminAbout ?t .
    #?t a bdo:Topic . # also works for things other than topics
    ?w :workIsAbout ?t .
    ?t skos:prefLabel ?tlabel .
    FILTER(lang(?tlabel) = "bo-x-ewts")

    ?rootmw :instanceOf ?w .
    FILTER (NOT EXISTS { ?rootmw :instanceReproductionOf ?mw2 })
    FILTER (NOT EXISTS { ?rootmw :inRootInstance ?rootmw2 })
    FILTER (NOT EXISTS { ?rootmw (^adm:adminAbout)/adm:restrictedInChina true })
    ?rootmw skos:prefLabel ?rootmwlabel .
    FILTER(lang(?rootmwlabel) = "bo-x-ewts")

  } union {

    #VALUES ?t { bdr:T1KG24262 bdr:T2KG207970 bdr:T1201 bdr:T1KG16182 bdr:T1151 bdr:T2MS13833 bdr:T2331 bdr:T2223 bdr:T8LS1426 bdr:T1KG16182 bdr:T1969 bdr:T8LS16960 }
    ?tadm adm:restrictedInChina true ;
          adm:adminAbout ?t .
    #?t a bdo:Topic . # also works for things other than topics
    ?w :workIsAbout ?t .
    ?t skos:prefLabel ?tlabel .
    FILTER(lang(?tlabel) = "bo-x-ewts")

    ?mw :instanceOf ?w .
    ?mw :inRootInstance ?rootmw .
    FILTER (NOT EXISTS { ?rootmw (^adm:adminAbout)/adm:restrictedInChina true })
    ?rootmw skos:prefLabel ?rootmwlabel .
    FILTER(lang(?rootmwlabel) = "bo-x-ewts")
    ?mw skos:prefLabel ?mwlabel .
    FILTER(lang(?mwlabel) = "bo-x-ewts")

  }
}

# non-ric instances by ric entities

select distinct ?rootmw ?rootmwlabel ?mw ?mwlabel ?t ?tlabel where {
  {
    ?tadm adm:restrictedInChina true ;
          adm:adminAbout ?t .
    ?aac :agent ?t .
    ?w :creator ?aac .
    ?t skos:prefLabel ?tlabel .
    FILTER(lang(?tlabel) = "bo-x-ewts")

    ?rootmw :instanceOf ?w .
    FILTER (NOT EXISTS { ?rootmw :instanceReproductionOf ?mw2 })
    FILTER (NOT EXISTS { ?rootmw :inRootInstance ?rootmw2 })
    FILTER (NOT EXISTS { ?rootmw (^adm:adminAbout)/adm:restrictedInChina true })
    ?rootmw skos:prefLabel ?rootmwlabel .
    FILTER(lang(?rootmwlabel) = "bo-x-ewts")

  } union {

    ?tadm adm:restrictedInChina true ;
          adm:adminAbout ?t .
    ?aac :agent ?t .
    ?w :creator ?aac .
    ?t skos:prefLabel ?tlabel .
    FILTER(lang(?tlabel) = "bo-x-ewts")

    ?mw :instanceOf ?w .
    ?mw :inRootInstance ?rootmw .
    FILTER (NOT EXISTS { ?rootmw (^adm:adminAbout)/adm:restrictedInChina true })
    ?rootmw skos:prefLabel ?rootmwlabel .
    FILTER(lang(?rootmwlabel) = "bo-x-ewts")
    ?mw skos:prefLabel ?mwlabel .
    FILTER(lang(?mwlabel) = "bo-x-ewts")

  }
}

# non-ric instances with keywords in title (itself or outline)

select distinct ?rootmw ?rootmwlabel ?mw ?mwlabel ?kw ?labelMatch where {
  {
    VALUES ?kw { "\"test\""@bo "\"test2\""@bo }
    (?title ?sc ?labelMatch) text:query ( rdfs:label ?kw "highlight:" ) .
    ?rootmw bdo:hasTitle ?title .

    FILTER (NOT EXISTS { ?rootmw :inRootInstance ?rootmw2 })
    FILTER (NOT EXISTS { ?rootmw (^adm:adminAbout)/adm:restrictedInChina true })
    ?rootmw skos:prefLabel ?rootmwlabel .
    FILTER(lang(?rootmwlabel) = "bo-x-ewts")

  } union {

    VALUES ?kw { "\"test\""@bo "\"test2\""@bo }
    (?ut ?sc ?labelMatch) text:query ( skos:prefLabel ?kw "highlight:" ) .
    ?ut :eTextInInstance ?rootmw .

    FILTER (NOT EXISTS { ?rootmw (^adm:adminAbout)/adm:restrictedInChina true })
    ?rootmw skos:prefLabel ?rootmwlabel .
    FILTER(lang(?rootmwlabel) = "bo-x-ewts")

  } union {

    VALUES ?kw { "\"test\""@bo "\"test2\""@bo }
    (?title ?sc ?labelMatch) text:query ( rdfs:label ?kw "highlight:" ) .
    ?rootmw bdo:hasTitle ?title .

    ?mw :inRootInstance ?rootmw .
    FILTER (NOT EXISTS { ?rootmw (^adm:adminAbout)/adm:restrictedInChina true })
    ?rootmw skos:prefLabel ?rootmwlabel .
    FILTER(lang(?rootmwlabel) = "bo-x-ewts")
    ?mw skos:prefLabel ?mwlabel .
    FILTER(lang(?mwlabel) = "bo-x-ewts")

  }

}

# non-ric instances with keywords in OCR

select distinct ?rootmw ?rootmwlabel ?kw where {
  {
    VALUES ?kw { "\"test\""@bo "\"test2\""@bo }
    (?chunk ?score ?lit) text:query ( :chunkContents ?kw "highlight:") .
    ?etext bdo:eTextHasChunk ?chunk .
    ?etext bdo:eTextInInstance ?ie .
    ?ie bdo:instanceReproductionOf ?rootmw .

    FILTER (NOT EXISTS { ?rootmw (^adm:adminAbout)/adm:restrictedInChina true })
    ?rootmw skos:prefLabel ?rootmwlabel .
    FILTER(lang(?rootmwlabel) = "bo-x-ewts")

  } union {

    VALUES ?kw { "\"test\""@bo "\"test2\""@bo }
    (?chunk ?score ?lit) text:query ( :chunkContents ?kw "highlight:") .
    ?etext bdo:eTextHasChunk ?chunk .
    ?etext bdo:eTextInInstance ?rootmw .
    FILTER (NOT EXISTS { ?rootmw bdo:instanceReproductionOf ?rootmw })

    FILTER (NOT EXISTS { ?rootmw (^adm:adminAbout)/adm:restrictedInChina true })
    ?rootmw skos:prefLabel ?rootmwlabel .
    FILTER(lang(?rootmwlabel) = "bo-x-ewts")

  }

}
