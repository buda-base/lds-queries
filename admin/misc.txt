# authorship statement but no creator

select distinct ?w ?as {
  ?w :authorshipStatement ?as .
  ?wadm adm:adminAbout ?w ;
        adm:metadataLegal bda:LD_BDRC_CC0 ;
        adm:status bda:StatusReleased .
  ?w bdo:instanceOf ?wa .
  FILTER NOT EXISTS {?wa :creator ?c}
}

# biographies with no attached person

T1CZ60 / T3 / T208 / T413

select distinct ?wa ?title {
  #VALUES ?t {bdr:T208 bdr:T413}
  ?wa :workGenre bdr:T208 .
  #FILTER NOT EXISTS {?wa :workIsAbout/rdf:type bdo:Person}
  FILTER NOT EXISTS {?wa :workIsAbout ?p}
  ?wadm adm:adminAbout ?wa ;
        adm:metadataLegal bda:LD_BDRC_CC0 ;
        adm:status bda:StatusReleased .
  ?wa skos:prefLabel ?title .
  FILTER (lang(?title) = "bo-x-ewts")
}

# persons with the same birth and death dates

select ?p1 ?p2 ?p1label ?p2label
where {
  ?p1b a bdo:PersonBirth ;
     :onYear ?p1by .
  ?p1 :personEvent ?p1b .
  ?p2b  :onYear ?p1by  ;
     a bdo:PersonBirth .
  ?p2 :personEvent ?p2b .
  filter (?p1 != ?p2)
  ?p1 :personEvent ?p1d .
  ?p1d a bdo:PersonDeath ;
       :onYear ?p1dy .
  ?p2 :personEvent ?p2d .
  ?p2d a bdo:PersonDeath ;
       :onYear ?p1dy .
  ?p1 skos:prefLabel ?p1label .
  filter(lang(?p1label) = "bo-x-ewts")
  ?p2 skos:prefLabel ?p2label .
  filter(lang(?p2label) = "bo-x-ewts")
}

# number of volumes

select (count(?i) as ?nbvol) where {
  ?i a :ImageGroup ;
     :volumePagesTotal ?vpt ;
     :volumeOf ?w .
  FILTER (?vpt > 3)
  ?iadm adm:adminAbout ?i ;
      adm:status    bda:StatusReleased .
  ?wadm adm:adminAbout ?w ;
        adm:status    bda:StatusReleased ;
        adm:metadataLegal  bda:LD_BDRC_CC0 .
}

# list volumes with less than 3 images (TODO)

# number of volumes synced between ?date1 and ?date2 for the first time (TODO)

# list possible duplicates: P0RK + disciples of the same master who are not P0RK

select ?p ?pl ?od ?odl 
WHERE 
{
  ?lg adm:logWho bdu:U00023 .
  ?padm adm:logEntry ?lg ;
        adm:adminAbout ?p ;
        adm:status bda:StatusReleased .
  ?p a bdo:Person ;
     bdo:personStudentOf ?t .
  ?t bdo:personTeacherOf ?od .
  ?odadm adm:adminAbout ?od .
  FILTER (NOT EXISTS {?odadm adm:logEntry/adm:logWho bdu:U00023})
  ?od skos:prefLabel ?odl .
  ?p skos:prefLabel ?pl .
  FILTER (lang(?pl) = "bo-x-ewts")
  FILTER (lang(?odl) = "bo-x-ewts")
} limit 2000

select ?p ?label ?nt
where {
   (?n ?sc ?nt) text:query ( bdo:noteText "duplicate"@en ) .
   ?p bdo:note ?n ;
      a bdo:Person .
   ?adm adm:adminAbout ?p ;
        adm:status bda:StatusWithdrawn .
   FILTER NOT EXISTS {?adm adm:replaceWith ?po .}
}

# NLM works spreadsheet

select ?i ?ilabel ?po ?arid ?alabel ?topic ?genre ?printeryrid ?printerylabel where {
  {  
    ?ii bdo:inCollection  bdr:PR1NLM00 .
    ?iiadm adm:adminAbout ?ii ;
           adm:status bda:StatusReleased .
    ?ii bdo:instanceReproductionOf ?i .
    ?i skos:prefLabel ?ilabel .
    FILTER (lang(?ilabel) = "bo-x-ewts")
  } union {
    ?ii bdo:inCollection  bdr:PR1NLM00 .
    ?iiadm adm:adminAbout ?ii ;
           adm:status bda:StatusReleased .
    ?ii bdo:instanceOf ?w .
    ?w bdo:creator ?aac .
    ?aac bdo:role bdr:R0ER0019 ;
         bdo:agent ?arid .
    ?arid skos:prefLabel ?alabel .
    FILTER (lang(?alabel) = "bo-x-ewts")
  } union {
    ?ii bdo:inCollection  bdr:PR1NLM00 .
    ?iiadm adm:adminAbout ?ii ;
           adm:status bda:StatusReleased .
    ?ii bdo:instanceOf ?w .
    ?w bdo:genre ?genre .
  } union {
    ?ii bdo:inCollection  bdr:PR1NLM00 .
    ?iiadm adm:adminAbout ?ii ;
           adm:status bda:StatusReleased .
    ?ii bdo:instanceOf ?w .
    ?w bdo:topic ?topic .
  }
   union {
    ?ii bdo:inCollection  bdr:PR1NLM00 .
    ?iiadm adm:adminAbout ?ii ;
           adm:status bda:StatusReleased .
    ?ii bdo:instanceReproductionOf ?i .
    ?i bdo:hasSourcePrintery ?printeryrid .
    ?printeryrid skos:prefLabel ?printerylabel .
    FILTER (lang(?printerylabel) = "bo-x-ewts")
  }
}

# copyrighted works scanned at LTWA

#Bibliographic Note

select ?w ?title ?pubname ?ntext where {
  {
    (?w ?sc ?si) text:query ( bdo:scanInfo "satluj"@en ) .
    ?wadm adm:adminAbout ?w ;
          adm:access bda:AccessFairUse .
    ?w bdo:scanInfo ?ntext .
    FILTER(?ntext != ?si)
    ?w bdo:instanceReproductionOf ?i .
    ?i skos:prefLabel ?title ;
       bdo:publisherName ?pubname .
  } union {
    (?w ?sc ?si) text:query ( bdo:scanInfo "satluj"@en ) .
    ?wadm adm:adminAbout ?w ;
          adm:access bda:AccessFairUse .
    FILTER NOT EXISTS { ?w bdo:scanInfo ?osi . FILTER(?osi != ?si) }
    ?w bdo:instanceReproductionOf ?i .
    ?i skos:prefLabel ?title ;
       bdo:publisherName ?pubname .
    ?i bdo:note ?n .
    ?n bdo:noteText ?ntext .
  } union {
    (?w ?sc ?si) text:query ( bdo:scanInfo "satluj"@en ) .
    ?wadm adm:adminAbout ?w ;
          adm:access bda:AccessFairUse .
    FILTER NOT EXISTS { ?w bdo:scanInfo ?osi . FILTER(?osi != ?si) }
    ?w bdo:instanceReproductionOf ?i .
    FILTER NOT EXISTS { ?i bdo:note ?n }
  }
}

# duplicates on Wikidata

select ?wdold ?old ?wdnew ?new {
  ?oldAdm adm:replaceWith ?new ;
          adm:adminAbout ?old .
  ?old owl:sameAs ?wdold .
  FILTER(regex(str(?wdold), "^http://www.wikidata"))
  #?new owl:sameAs ?wdnew .
  #FILTER(regex(str(?wdnew), "^http://www.wikidata"))
}

# list scan-volumes of openpecha

select distinct ?w ?i where {
  ?resRepAdm adm:syncAgent  bdr:SAOPT .
  ?resRepAdm adm:adminAbout/bdo:instanceReproductionOf ?w .
  ?w a bdo:ImageInstance .
  ?wadm adm:adminAbout ?w ;
        adm:status bda:StatusReleased ;
        adm:access bda:AccessOpen .
  FILTER NOT EXISTS {?wadm adm:restrictedInChina true}
  ?w bdo:instanceReproductionOf/bdo:printMethod bdr:PrintMethod_Modern .
  ?w bdo:instanceHasVolume ?i .
}

# persons' birth and death dates, with affiliation

select distinct ?p ?pname ?bdate ?ddate ?seat where {
  {
    ?p :personEvent ?birth .
    FILTER NOT EXISTS {?p :personEvent/rdf:type bdo:PersonOccupiesSeat}
    ?birth a :PersonBirth ;
           bdo:onYear ?bdate .
    ?p :personEvent ?death .
    ?death a :PersonDeath ;
           bdo:onYear ?ddate .
    ?p skos:prefLabel ?pname .
  } union {
    ?p :personEvent ?os .
    ?os a :PersonOccupiesSeat ;
        :eventWhere ?seat .
    ?p :personEvent ?birth .
    ?birth a :PersonBirth ;
           bdo:onYear ?bdate .
    ?p :personEvent ?death .
    ?death a :PersonDeath ;
           bdo:onYear ?ddate .
    ?p skos:prefLabel ?pname .
  }
}

# NGMPP authors, works and instances:

  select distinct (count(distinct ?wa) as ?cwa) (count (distinct ?mw) as ?cmw)  (count (distinct ?p) as ?cp) where {
    bda:ADMNMGCP adm:adminAbout ?mw .
    ?mw a bdo:Instance .
    ?mw :instanceOf ?wa .
    ?wa :creator/:agent ?p .
    ?p tmp:associatedCentury 20 .
  }

# number of authors with sungbum

  select (count(distinct ?p) as ?cp) where {
    {
      ?wa bdo:workGenre bdr:T208 .
    } union {
      ?wa bdo:workIsAbout bdr:T208 .
    }
    ?wa bdo:creator ?aac .
    ?aac bdo:role bdr:R0ER0019 ;
         bdo:agent ?p .
  }

# number of volumes per scanInfo keyword

select (sum(?nbv) as ?nbvt) where {
   #?w bdo:inCollection bdr:PR1PL480 .
   ?w text:query ( bdo:scanInfo "\"Fragile Palm Leaves Foundation\""@en ) .
   #?w bdo:scanInfo "This manuscript was digitized at the Fragile Palm Leaves Foundation in Thailand with the generous support of Khyentse Foundation"@en ;
   ?w  bdo:numberOfVolumes ?nbv ;
       tmp:thumbnailIIIFService ?th .
   ?wadm adm:adminAbout ?w ;
       adm:contentLegal bda:LD_BDRC_PD ;
       adm:restrictedInChina false ;
       adm:access bda:AccessOpen ;
       adm:status bda:StatusReleased .
}

# total number of volumes

select (count (distinct ?ig) as ?igt) where {
   ?w a bdo:ImageInstance .
   ?w tmp:thumbnailIIIFService ?th .
   ?wadm adm:adminAbout ?w ;
        adm:contentLegal bda:LD_BDRC_PD ;
        adm:restrictedInChina false ;
        adm:access bda:AccessOpen ;
        adm:status bda:StatusReleased .
   ?w bdo:instanceHasVolume ?ig .
}

# outline in csv

select ?title ?titlebo ?bvol ?bpage ?epage WHERE 
{
  ?mw :partOf+ bdr:MW21727 ;
      :partType bdr:PartTypeText ;
      :partTreeIndex ?pti ;
      :contentLocation ?cl ;
      skos:prefLabel ?title .
  BIND(f:ewtsToUnicode(?title) as ?titlebo)
  ?cl :contentLocationPage ?bpage ;
      :contentLocationEndPage ?epage ;
      :contentLocationVolume ?bvol .
} order by ?pti


# non-ric instances about ric entities (TODO: don't spot things about restricted Works, just person, place and topic)

select distinct ?rootmw ?rootmwlabel ?mw ?mwlabel ?t ?tlabel where {
  {
  
    #VALUES ?t { bdr:T1KG24262 bdr:T2KG207970 bdr:T1201 bdr:T1KG16182 bdr:T1151 bdr:T2MS13833 bdr:T2331 bdr:T2223 bdr:T8LS1426 bdr:T1KG16182 bdr:T1969 bdr:T8LS16960 }
    ?tadm adm:restrictedInChina true ;
          adm:adminAbout ?t .
    FILTER (NOT EXISTS {?t a bdo:Work})
    ?w :workIsAbout ?t .
    ?t skos:prefLabel ?tlabel .
    FILTER(lang(?tlabel) = "bo-x-ewts")

    ?rootmw :instanceOf ?w .
    FILTER (NOT EXISTS { ?rootmw :instanceReproductionOf ?mw2 })
    FILTER (NOT EXISTS { ?rootmw :inRootInstance ?rootmw2 })
    FILTER (NOT EXISTS { ?rootmw (^adm:adminAbout)/adm:restrictedInChina true })
    ?rootmw skos:prefLabel ?rootmwlabel .
    FILTER(lang(?rootmwlabel) = "bo-x-ewts")

  } union {

    #VALUES ?t { bdr:T1KG24262 bdr:T2KG207970 bdr:T1201 bdr:T1KG16182 bdr:T1151 bdr:T2MS13833 bdr:T2331 bdr:T2223 bdr:T8LS1426 bdr:T1KG16182 bdr:T1969 bdr:T8LS16960 }
    ?tadm adm:restrictedInChina true ;
          adm:adminAbout ?t .
    FILTER (NOT EXISTS {?t a bdo:Work})
    ?w :workIsAbout ?t .
    ?t skos:prefLabel ?tlabel .
    FILTER(lang(?tlabel) = "bo-x-ewts")

    ?mw :instanceOf ?w .
    ?mw :inRootInstance ?rootmw .
    FILTER (NOT EXISTS { ?rootmw (^adm:adminAbout)/adm:restrictedInChina true })
    ?rootmw skos:prefLabel ?rootmwlabel .
    FILTER(lang(?rootmwlabel) = "bo-x-ewts")
    ?mw skos:prefLabel ?mwlabel .
    FILTER(lang(?mwlabel) = "bo-x-ewts")

  }
}

# non-ric instances by ric entities

select distinct ?rootmw ?rootmwlabel ?mw ?mwlabel ?t ?tlabel where {
  {
    ?tadm adm:restrictedInChina true ;
          adm:adminAbout ?t .
    ?aac :agent ?t .
    ?w :creator ?aac .
    ?t skos:prefLabel ?tlabel .
    FILTER(lang(?tlabel) = "bo-x-ewts")

    ?rootmw :instanceOf ?w .
    FILTER (NOT EXISTS { ?rootmw :instanceReproductionOf ?mw2 })
    FILTER (NOT EXISTS { ?rootmw :inRootInstance ?rootmw2 })
    FILTER (NOT EXISTS { ?rootmw (^adm:adminAbout)/adm:restrictedInChina true })
    ?rootmw skos:prefLabel ?rootmwlabel .
    FILTER(lang(?rootmwlabel) = "bo-x-ewts")

  } union {

    ?tadm adm:restrictedInChina true ;
          adm:adminAbout ?t .
    ?aac :agent ?t .
    ?w :creator ?aac .
    ?t skos:prefLabel ?tlabel .
    FILTER(lang(?tlabel) = "bo-x-ewts")

    ?mw :instanceOf ?w .
    ?mw :inRootInstance ?rootmw .
    FILTER (NOT EXISTS { ?rootmw (^adm:adminAbout)/adm:restrictedInChina true })
    ?rootmw skos:prefLabel ?rootmwlabel .
    FILTER(lang(?rootmwlabel) = "bo-x-ewts")
    ?mw skos:prefLabel ?mwlabel .
    FILTER(lang(?mwlabel) = "bo-x-ewts")

  }
}

# non-ric instances with keywords in title (itself or outline)

select distinct ?rootmwlabel ?mwlabel ?kw ?labelMatch ?rootmw ?mw where {
  {
    VALUES ?kw { "\"test\""@bo "\"test2\""@bo }
    (?title ?sc ?labelMatch) text:query ( rdfs:label ?kw "highlight:" ) .
    ?rootmw bdo:hasTitle ?title .

    FILTER (NOT EXISTS { ?rootmw :inRootInstance ?rootmw2 })
    FILTER (NOT EXISTS { ?rootmw (^adm:adminAbout)/adm:restrictedInChina true })
    ?rootmw skos:prefLabel ?rootmwlabel .
    FILTER(lang(?rootmwlabel) = "bo-x-ewts")

  } union {

    VALUES ?kw { "\"test\""@bo "\"test2\""@bo }
    (?ut ?sc ?labelMatch) text:query ( skos:prefLabel ?kw "highlight:" ) .
    ?ut :eTextInInstance ?rootmw .

    FILTER (NOT EXISTS { ?rootmw (^adm:adminAbout)/adm:restrictedInChina true })
    ?rootmw skos:prefLabel ?rootmwlabel .
    FILTER(lang(?rootmwlabel) = "bo-x-ewts")

  } union {

    VALUES ?kw { "\"test\""@bo "\"test2\""@bo }
    (?title ?sc ?labelMatch) text:query ( rdfs:label ?kw "highlight:" ) .
    ?rootmw bdo:hasTitle ?title .

    ?mw :inRootInstance ?rootmw .
    FILTER (NOT EXISTS { ?rootmw (^adm:adminAbout)/adm:restrictedInChina true })
    ?rootmw skos:prefLabel ?rootmwlabel .
    FILTER(lang(?rootmwlabel) = "bo-x-ewts")
    ?mw skos:prefLabel ?mwlabel .
    FILTER(lang(?mwlabel) = "bo-x-ewts")

  }

}

# non-ric instances with keywords in OCR

select distinct ?rootmw ?ie ?rootmwlabelu ?kw where {
  {
    VALUES ?kw { "\"test\""@bo "\"test2\""@bo }
    (?chunk ?score ?lit) text:query ( :chunkContents ?kw) .
    ?etext bdo:eTextHasChunk ?chunk .
    ?etext bdo:eTextInInstance ?ie .
    ?ie bdo:instanceReproductionOf ?rootmw .

    FILTER (NOT EXISTS { ?rootmw (^adm:adminAbout)/adm:restrictedInChina true })
    ?rootmw skos:prefLabel ?rootmwlabel .
    FILTER(lang(?rootmwlabel) = "bo-x-ewts")
    BIND(f:ewtsToUnicode(?rootmwlabel) as ?rootmwlabelu)

  } union {

    VALUES ?kw { "\"test\""@bo "\"test2\""@bo }
    (?chunk ?score ?lit) text:query ( :chunkContents ?kw) .
    ?etext bdo:eTextHasChunk ?chunk .
    ?etext bdo:eTextInInstance ?rootmw .
    BIND(?rootmw as ?ie)
    FILTER (NOT EXISTS { ?rootmw bdo:instanceReproductionOf ?rootmw })

    FILTER (NOT EXISTS { ?rootmw (^adm:adminAbout)/adm:restrictedInChina true })
    ?rootmw skos:prefLabel ?rootmwlabel .
    FILTER(lang(?rootmwlabel) = "bo-x-ewts")
    BIND(f:ewtsToUnicode(?rootmwlabel) as ?rootmwlabelu)

  }
}


# scans restricted in China with outlines

select distinct ?w where {
    ?wadm adm:restrictedInChina true .
    ?wadm adm:adminAbout ?w .
    FILTER ( EXISTS { ?w :instanceReproductionOf/:hasPart ?p } ) 
}


# outline with genres / topics

select ?mw ?title ?pti ?topic ?topiclabel WHERE 
{
  ?mw :partOf+ bdr:MW21807 ;
      :partTreeIndex ?pti ;
      skos:prefLabel ?title .
  FILTER (lang(?title) = "bo-x-ewts")
  ?mw :instanceOf ?w .
  ?w ?wp ?topic .
  FILTER(?wp = :workIsAbout || ?wp = :workGenre)
  ?topic skos:prefLabel ?topiclabel .
  FILTER(lang(?topiclabel) = "bo-x-ewts")
} order by ?pti

# non-ric, non-PL480 versions with publisherLocation in certain keywords

select ?mw ?title ?pl where {
  VALUES ?kw { "test"@en }
  ?mw :publisherLocation ?kw .
  FILTER(NOT EXISTS {?mw :instanceHasReproduction/:inCollection bdr:PR1PL480})
  FILTER(NOT EXISTS {?mw :instanceHasReproduction/^adm:adminAbout/adm:restrictedInChina true })
  ?mw skos:prefLabel ?title .
  FILTER (lang(?title) = "bo-x-ewts")
}


# list of place types

select ?t (max(?labelbo) as ?mlabelbo) (max(?labelen) as ?mlabelen) {
  ?t a bdo:PlaceType .
  ?t skos:prefLabel ?l .
  BIND(IF(lang(?l) = "bo-x-ewts", ?l, "") as ?labelbo)
  BIND(IF(lang(?l) = "en", ?l, "") as ?labelen)
} group by ?t


# estimate of total number of volumes / pages with no OCR

select (sum(?nbimg) as ?totimag) (count(?v) as ?totv) {
  ?ii a :ImageInstance .
  ?ii :instanceOf ?wa .
  ?wa :language bdr:LangBo .
  FILTER ( NOT EXISTS {
    ?ii :instanceReproductionOf ?i .
    ?i :instanceHasReproduction ?ei .
    ?ei a :EtextInstance .
  })
  ?ii :instanceHasVolume ?v .
  ?v :volumePagesTotal ?nbimg .
}


# "par ma" in title, no printery

select ?mw ?l
where {
   ?mw text:query ( skos:prefLabel "\"par ma\""@bo-x-ewts ) .
   ?mw a bdo:Instance .
   FILTER (NOT EXISTS {?mw :printery ?p})
  FILTER (NOT EXISTS {?mw :partOf ?po})
   ?mw skos:prefLabel ?l
}

# Printeries (bdr:PT0059) and monasteries (bdr:PT0037) in Mongolia (bdr:G584), Inner Mongolia (bdr:G603) and Buryatia (no RID yet)

# mn-x-trans

select ?p ?pt (group_concat(?pl;SEPARATOR="; ") as ?l) ?lat ?long {
  {
    bdr:G584 :placeContains+ ?p .
    ?p :placeType ?ptr .
    FILTER NOT EXISTS { ?p :placeLat ?plj }
    FILTER (?ptr = bdr:PT0059 || ?ptr = bdr:PT0037 || ?ptr=bdr:PT0040)
    ?ptr skos:prefLabel ?pt . FILTER(lang(?pt) = "en")
    ?p skos:prefLabel ?pl .
  } union {
    bdr:G584 :placeContains+ ?p .
    ?p :placeType ?ptr .
    FILTER (?ptr = bdr:PT0059 || ?ptr = bdr:PT0037 || ?ptr=bdr:PT0040)
    ?ptr skos:prefLabel ?pt . FILTER(lang(?pt) = "en")
    ?p :placeLat ?lat ;
       :placeLong ?long ;
       skos:prefLabel ?pl .
  } union   {
    bdr:G584 :placeContains+ ?p .
    FILTER NOT EXISTS { ?p :placeLat ?plj }
    FILTER NOT EXISTS {  ?p :placeType ?ptr . }
    ?p skos:prefLabel ?pl .
  } union {
    bdr:G584 :placeContains+ ?p .
    FILTER NOT EXISTS {  ?p :placeType ?ptr . }
    ?p :placeLat ?lat ;
       :placeLong ?long ;
       skos:prefLabel ?pl .
  }
} group by ?p ?pt ?lat ?long

# associated tradition coming from the sungbum vs. associated tradition coming from the seat

select distinct ?p ?sbt (group_concat(distinct ?petln;separator=", ") as ?petc) WHERE 
{
    {
      ?sbt a :Tradition ;
          rdfs:seeAlso ?sbtt .
      ?wa :workIsAbout ?sbtt ;
          :workGenre bdr:T208 ;
          :creator ?aac .
      ?aac :agent ?p .
      FILTER(NOT EXISTS{?p :associatedTradition ?sbt})
      ?p :associatedTradition ?pet .
      BIND(strafter(str(?pet), "dition") AS ?petln)
    } union {
      ?sbt a :Tradition ;
          rdfs:seeAlso ?sbtt .
      ?wa :workIsAbout ?sbtt ;
          :workGenre bdr:T208 ;
          :creator ?aac .
      ?aac :agent ?p .
        FILTER(NOT EXISTS {?p :associatedTradition ?pet .})
    }
} group by ?p ?sbt

# all Tibetan scans

select distinct ?w WHERE 
{
  VALUES ?a { bda:AccessOpen bda:AccessFairUse }
  ?admw adm:access ?a ;
        adm:status bda:StatusReleased ;
        adm:adminAbout ?w .
  ?w :instanceOf ?wa .
  ?wa :language bdr:LangBo .
  FILTER(EXISTS { ?w :instanceHasVolume ?v . ?v :volumePagesTotal ?tp . FILTER(?tp > 2) })
}


# outline nodes with no page indication

select ?mw ?on ?title ?titleu {
  ?cl a :ContentLocation .
  FILTER(NOT EXISTS {?cl :contentLocationPage ?clp })
  ?mwo :contentLocation ?cl ;
       :partType bdr:PartTypeText ;
       :inRootInstance ?mw ;
       skos:prefLabel ?title .
  FILTER(lang(?title) = "bo-x-ewts")
  BIND(f:ewtsToUnicode(?title) as ?titleu)
  ?mw (^adm:adminAbout)/:legacyOutlineNodeRID ?on .
} limit 10

# series number with no serial work

select ?mw ?title ?sn {
  ?mw :seriesNumber ?sn .
  FILTER(NOT EXISTS {?mw :serialInstanceOf ?si })
  ?mw skos:prefLabel ?title .
  FILTER(lang(?title) = "bo-x-ewts")
  ?mwa adm:adminAbout ?mw .
  ?mwa adm:status bda:StatusReleased .
}

# persons with no associated dates authors of recent open publications

select ?p {
    ?mw :instanceHasReproduction ?w .
    ?w a :ImageInstance .
    ?wadm adm:adminAbout ?w ;
        adm:status bda:StatusReleased ;
        adm:access bda:AccessOpen ;
        .
    ?mw :instanceEvent ?ie .
    ?ie :onYear ?y .
    filter(?y > "1900"^^xsd:gYear)

    ?mw :instanceOf ?wa .
    ?wa :creator ?c .
    ?c :agent ?p .
    filter(not exists {
      ?p tmp:associatedCentury ?ac .
    })
}

# authors with no dates, of recent books

select distinct ?p {
    ?mw :instanceHasReproduction ?w .
    ?w a :ImageInstance .
    ?wadm adm:adminAbout ?w ;
        adm:status bda:StatusReleased ;
        .
    ?mw :instanceEvent ?ie .
    ?ie :onYear ?y .
    filter(?y > "1900"^^xsd:gYear)

    ?mw :instanceOf ?wa .
    ?wa :creator ?c .
    ?c :agent ?p .
    filter(not exists {
      ?p tmp:associatedCentury ?ac .
    })
}


# copyrighted instances: 4777 instances

select distinct ?mw {
  {
    # any event of the author after 1972
    ?mw :instanceHasReproduction ?w .
    ?w a :ImageInstance .
    ?mw :instanceOf ?wa .
    ?wa :creator ?c .
    ?c :agent ?p .
    ?p :personEvent ?e .
    ?e :onYear ?y .
    FILTER(?y >= "1972"^^xsd:gYear)
  } union {
    # author in the 20th c. with no death date
    ?mw :instanceHasReproduction ?w .
    ?w a :ImageInstance .
    ?mw :instanceOf ?wa .
    ?wa :creator ?c .
    ?c :agent ?p .
    ?p tmp:associatedCentury 20 .
    FILTER(NOT EXISTS {
      ?p :personEvent ?e .
      ?e a :PersonDeath .
    })
  }
}


# copyright claimed: 259 instances
select distinct ?mw {
  {
    # author before the 20th c. but fairUse
    ?mw :instanceHasReproduction ?w .
    ?w a :ImageInstance .
    ?wadm adm:adminAbout ?w ;
          adm:access bda:AccessFairUse .
    ?mw :instanceOf ?wa .
    ?wa :creator ?c .
    ?c :agent ?p .
    ?p tmp:associatedCentury ?ce .
    FILTER(?ce < 20)
  } union {
    # author died before the 1972 but fairUse
    ?mw :instanceHasReproduction ?w .
    ?w a :ImageInstance .
    ?wadm adm:adminAbout ?w ;
          adm:access bda:AccessFairUse .
    ?mw :instanceOf ?wa .
    ?wa :creator ?c .
    ?c :agent ?p .
    ?p :personEvent ?e .
    ?e a :PersonDeath ;
       :onYear ?y .
    FILTER(?y < "1972"^^xsd:gYear)
  }
}

# copyright unknown: no author, author with no dates, modern edition not before 1922: 2812 instances

select distinct ?mw {
  {
    ?mw :printMethod bdr:PrintMethod_Modern ;
        :instanceHasReproduction ?w .
    ?w a :ImageInstance .
    ?wadm adm:adminAbout ?w ;
          adm:access ?acc .
    ?mw :instanceOf ?wa .
    FILTER ( NOT EXISTS {
      ?wa :creator ?c .
      ?c :agent ?p .
      ?p tmp:associatedCentury ?ce .
    })
    FILTER ( NOT EXISTS {
      ?mw :publishedEvent ?mwe .
      ?mwe :onYear ?y .
      FILTER(?y < "1922"^^xsd:gYear)
    })
  }
}
