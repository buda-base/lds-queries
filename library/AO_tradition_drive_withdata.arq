#QueryScope=ImageInstance
#QueryReturnType=Graph
#QueryResults=All image instances about a tradition or by authors of a tradition
#QueryParams=R_RES
#QueryUrl=/AO_tradition_drive?R_RES=bdr:TraditionNyingma

#param.R_RES.type=resource
#param.R_RES.desc=the tradition

PREFIX tmp: <http://purl.bdrc.io/ontology/tmp/>

CONSTRUCT
{
    ?inDLDw skos:prefLabel ?resL .
    ?inDLDw a bdo:ImageInstance .
    ?inDLDw :instanceReproductionOf ?mw .

    ?inDLDw ?ip ?io .

    # We cheat a bit and attach the topic to the instance instead
    # of the corresponding work
    ?inDLDw ?wp ?wo .
    ?wo skos:prefLabel ?wol .

    # Same for the author, entity score and language
    ?inDLDw tmp:author ?author .
    ?author skos:prefLabel ?agentL .

    ?inDLDw tmp:thumbnailIIIFService ?th .
}
WHERE 
{
    {
      ?R_RES rdfs:seeAlso* ?t .
      ?wa :workIsAbout ?t ;
          :language bdr:LangBo .
      ?mw :instanceOf ?wa ;
          :instanceHasReproduction ?w .
      ?w a :ImageInstance .
      BIND(?w as ?inDLDw)
      FILTER (exists {?w tmp:thumbnailIIIFService ?ths } || exists {?w tmp:thumbnailIIIFSelected ?ths })
      FILTER (not exists {?w :instanceHasVolume ?v . ?v :hasIIIFManifest ?iiif })
      ?wadm adm:adminAbout ?w ;
            adm:status bda:StatusReleased ;
            adm:access ?acc .
      FILTER(?acc = bda:AccessOpen || ?acc = bda:AccessFairUse)
      
      ?mw ?ip ?io .
      FILTER (?ip != bdo:note && ?ip != rdf:type && ?ip != bdo:instanceHasReproduction && ?ip != tmp:thumbnailIIIFService && ?ip != bdo:instanceEvent && ?ip != bdo:hasTitle && ?ip != bdo:hasPart
        && ?ip != bdo:colophon && ?ip != bdo:incipit)

      ?wa ?wp ?wo .
      FILTER(?wp IN(bdo:workIsAbout , bdo:workGenre))
      ?wo skos:prefLabel ?wol .

    } union {

      ?R_RES rdfs:seeAlso* ?t .
      ?wa :workIsAbout ?t ;
          :language bdr:LangBo .
      ?mw :instanceOf ?wa ;
          :instanceHasReproduction ?w .
      ?w a :ImageInstance .
      BIND(?w as ?inDLDw)
      FILTER (exists {?w tmp:thumbnailIIIFService ?ths } || exists {?w tmp:thumbnailIIIFSelected ?ths })
      FILTER (not exists {?w :instanceHasVolume ?v . ?v :hasIIIFManifest ?iiif })
      ?wadm adm:adminAbout ?w ;
            adm:status bda:StatusReleased ;
            adm:access ?acc .
      FILTER(?acc = bda:AccessOpen || ?acc = bda:AccessFairUse)

      ?wa bdo:creator ?creator .
      ?creator bdo:role ?role .
      filter(?role IN(bdr:R0ER0014 , bdr:R0ER0016 , bdr:R0ER0019 , bdr:R0ER0025))
      ?creator bdo:agent ?author .
      ?author skos:prefLabel ?agentL .

    } union {

      ?author :associatedTradition ?R_RES .
      ?aac :agent ?author ;
           :role ?r .
      filter(?r IN(bdr:R0ER0014 , bdr:R0ER0016 , bdr:R0ER0019 , bdr:R0ER0025))
      ?wa :creator ?aac ;
          :language bdr:LangBo .
      ?mw :instanceOf ?wa ;
          :instanceHasReproduction ?w .
      ?w a :ImageInstance .
      BIND(?w as ?inDLDw)
      FILTER (exists {?w tmp:thumbnailIIIFService ?ths } || exists {?w tmp:thumbnailIIIFSelected ?ths })
      FILTER (not exists {?w :instanceHasVolume ?v . ?v :hasIIIFManifest ?iiif })
      ?wadm adm:adminAbout ?w ;
            adm:status bda:StatusReleased ;
            adm:access ?acc .
      FILTER(?acc = bda:AccessOpen || ?acc = bda:AccessFairUse)

      ?mw ?ip ?io .
      FILTER (?ip != bdo:note && ?ip != rdf:type && ?ip != bdo:instanceHasReproduction && ?ip != tmp:thumbnailIIIFService && ?ip != bdo:instanceEvent && ?ip != bdo:hasTitle && ?ip != bdo:hasPart
        && ?ip != bdo:colophon && ?ip != bdo:incipit)

      ?agent skos:prefLabel ?agentL .

      ?wa ?wp ?wo .
      FILTER(?wp IN(bdo:workIsAbout , bdo:workGenre))
      ?wo skos:prefLabel ?wol .
    }
}
