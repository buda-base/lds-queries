#QueryScope=General
#QueryReturnType=Graph
#QueryResults=A graph with most relevant triples for a given resource
#QueryParams=R_RES
#QueryUrl=/ResInfo?R_RES=bdr:P360

#param.R_RES.type=resource
#param.R_RES.subtype=a Resource ID
#param.R_RES.desc=the unique resource ID of the chosen resource

construct {
 ?R_RES ?rp ?ro .
 ?ro2 ?ro2p ?ro2o .
 ?ro3 ?ro3p ?ro3o .
 ?dt ?dtp ?dto
} where {
  {
    FILTER(not exists{?radm adm:adminAbout ?R_RES ; adm:status bda:StatusHidden})
    ?R_RES ?rp ?ro .
    FILTER(?rp != :chunkContents)
  } union {
    FILTER(not exists{?radm adm:adminAbout ?R_RES ; adm:status bda:StatusHidden})
    ?R_RES ?rp2 ?ro2 .
    FILTER(?rp2 != bdo:collectionMember && ?rp2 != bdo:serialHasInstance && ?rp2 != bdo:hasPart && ?rp2 != :eTextHasChunk)
    ?ro2 rdf:type/rdfs:subClassOf+ :Facet .
    ?ro2 ?ro2p ?ro2o .
  } union {
    FILTER(not exists{?radm adm:adminAbout ?R_RES ; adm:status bda:StatusHidden})
    ?R_RES ?rp3 ?ro3 .
    FILTER(?rp3 != bdo:collectionMember && ?rp3 != bdo:serialHasInstance && ?rp3 != bdo:hasPart && ?rp3 != :eTextHasChunk)
    ?ro3 rdf:type/rdfs:subClassOf+ :Event .
    ?ro3 ?ro3p ?ro3o .
  } union {
    FILTER(not exists{?radm adm:adminAbout ?R_RES ; adm:status bda:StatusHidden})
    ?R_RES bf:identifiedBy ?ro4 .
    ?ro4 ?ro4p ?ro4o .
  }
}
