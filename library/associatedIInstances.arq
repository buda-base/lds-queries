#QueryScope=ImageInstance
#QueryReturnType=Graph
#QueryResults=All image instances associated with a resource (usually a product)
#QueryParams=R_RES
#QueryUrl=/lib/associatedIInstances?R_RES=bda:PR1CTC17

#param.R_RES.type=resource
#param.R_RES.subtype=a Resource ID
#param.R_RES.desc=the unique resource ID of the referenced entity

PREFIX tmp: <http://purl.bdrc.io/ontology/tmp/>

CONSTRUCT
{
    ?R_RES skos:prefLabel ?resL .
    ?ii tmp:isMain true .
    ?ii tmp:lastSync ?sdate .
    ?ii tmp:status ?status .
    ?ii tmp:provider ?provider .
    ?ii tmp:hasOpen ?iAccessOpen .
    ?ii tmp:hasReproAccess ?access .
    ?ii tmp:hasImage true .
    ?ii tmp:hasEtext false .
    ?ii a bdo:ImageInstance .
    ?ii :instanceReproductionOf ?i .
    ?ii ?ip ?io .

    # We cheat a bit and attach the topic to the instance instead
    # of the corresponding work
    ?ii ?wp ?wo .
    ?wo skos:prefLabel ?wol .

    # Same for the author, entity score and language
    ?ii tmp:author ?author .
    ?agent skos:prefLabel ?agentL .

    ?ii ?wiip ?wiio .

    ?ii tmp:relationType ?rel2 .
    ?ii tmp:relationTypeInv ?rel1 .
    ?ii tmp:thumbnailIIIFService ?th .
    ?ii bdo:scanInfo ?si .
}
WHERE 
{
    {
      ?R_RES skos:prefLabel ?resL .
    } union {

      {
        ?R_RES ?rel1 ?ii .
      } union {
        ?ii ?rel2 ?R_RES .
      }
      # only select synced scans (https://github.com/buda-base/library-issues/issues/389)
      ?ii tmp:thumbnailIIIFService ?th .
      ?iiAdm adm:adminAbout ?ii .
      ?iiAdm adm:access ?access .
      bind( ?access = bda:AccessOpen as ?iAccessOpen)
      ?iiAdm adm:status ?status .
      # do not show non-open access in CTC
      # ex: W1KG25482 in PR1CTC14
      FILTER(?status != bda:StatusHidden && (?access = bda:AccessOpen || not exists {?R_RES skos:prefLabel ?resL . FILTER(contains(?resL, "Core Text"))}))
      ?ii :instanceReproductionOf ?i .
      ?i ?ip ?io .
      FILTER (?ip != bdo:note && ?ip != rdf:type && ?ip != bdo:instanceHasReproduction && ?ip != tmp:thumbnailIIIFService && ?ip != bdo:instanceEvent && ?ip != bdo:hasTitle && ?ip != bdo:hasPart
        && ?ip != bdo:colophon && ?ip != bdo:incipit)
    } union {
      {
        ?R_RES ?rel1 ?ii .
      } union {
        ?ii ?rel2 ?R_RES .
      }
      ?ii tmp:thumbnailIIIFService ?th .
      ?iiAdm adm:adminAbout ?ii .
      ?iiAdm adm:access ?access .
      bind( ?access = bda:AccessOpen as ?iAccessOpen)
      ?iiAdm adm:status ?status .
      FILTER(?status != bda:StatusHidden && (?access = bda:AccessOpen || not exists {?R_RES skos:prefLabel ?resL . FILTER(contains(?resL, "Core Text"))}))
      # optional scanInfo
      ?ii bdo:scanInfo ?si .
    } union {
      {
        ?R_RES ?rel1 ?ii .
      } union {
        ?ii ?rel2 ?R_RES .
      }
      ?ii tmp:thumbnailIIIFService ?th .
      ?iiAdm adm:adminAbout ?ii .
      ?iiAdm adm:access ?access .
      bind( ?access = bda:AccessOpen as ?iAccessOpen)
      ?iiAdm adm:status ?status .
      FILTER(?status != bda:StatusHidden && (?access = bda:AccessOpen || not exists {?R_RES skos:prefLabel ?resL . FILTER(contains(?resL, "Core Text"))}))
      ?ii bdo:instanceOf ?w .
      ?w bdo:creator ?creator .
      ?creator bdo:role ?role .
      ?creator bdo:agent ?agent .
      ?agent skos:prefLabel ?agentL .
      bind( if(?role IN(bdr:R0ER0014 , bdr:R0ER0016 , bdr:R0ER0019 , bdr:R0ER0025), ?agent, 1/0) as ?author)
    } union {
      {
        ?R_RES ?rel1 ?ii .
      } union {
        ?ii ?rel2 ?R_RES .
      }
      ?ii tmp:thumbnailIIIFService ?th .
      ?iiAdm adm:adminAbout ?ii .
      ?iiAdm adm:access ?access .
      bind( ?access = bda:AccessOpen as ?iAccessOpen)
      ?iiAdm adm:status ?status .
      FILTER(?status != bda:StatusHidden && (?access = bda:AccessOpen || not exists {?R_RES skos:prefLabel ?resL . FILTER(contains(?resL, "Core Text"))}))
      ?ii bdo:instanceOf ?w .
      ?w ?wiip ?wiio .
      FILTER(?wiip IN(bdo:language , bdo:catalogInfo))
    } union {
      {
        ?R_RES ?rel1 ?ii .
      } union {
        ?ii ?rel2 ?R_RES .
      }
      ?ii tmp:thumbnailIIIFService ?th .
      ?iiAdm adm:adminAbout ?ii .
      ?iiAdm adm:access ?access .
      bind( ?access = bda:AccessOpen as ?iAccessOpen)
      ?iiAdm adm:status ?status .
      FILTER(?status != bda:StatusHidden && (?access = bda:AccessOpen || not exists {?R_RES skos:prefLabel ?resL . FILTER(contains(?resL, "Core Text"))}))
      ?ii bdo:instanceOf ?w .
      ?w ?wp ?wo .
      FILTER(?wp IN(bdo:workIsAbout , bdo:workGenre))
      ?wo skos:prefLabel ?wol .
    }
}
