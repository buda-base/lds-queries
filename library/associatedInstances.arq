#QueryScope=Instance
#QueryReturnType=Graph
#QueryResults=All works whose various literals contain the given L_NAME parameter value, along with their LICENSE + ACCESS + LANGSCRIPT + STATUS facets.
#QueryParams=R_RES
#QueryUrl=/lib/associatedInstances?R_RES=bdr:G1657

#param.R_RES.type=resource
#param.R_RES.subtype=a Resource ID
#param.R_RES.desc=the unique resource ID of the referenced entity

PREFIX tmp: <http://purl.bdrc.io/ontology/tmp/>


CONSTRUCT
{
    ?R_RES skos:prefLabel ?resL .
    ?i tmp:isMain true .
    ?i tmp:lastSync ?sdate .
    ?i tmp:status ?status .
    ?i tmp:provider ?provider .
    ?i tmp:hasReproAccess ?access .
    ?i ?ip ?io .

    ?i :inRootInstance ?iR .
    ?iR skos:prefLabel ?iRl .
    ?i ?iRp ?iRo .

    ?i tmp:yearStart ?yearStart .
    ?i tmp:yearEnd ?yearEnd .

    ?i tmp:hasOpen ?hasopen .
    ?i tmp:hasImage ?hasimage .
    ?i tmp:hasEtext ?hasetext .
    ?i tmp:possibleAccess ?haspossible .
    ?i tmp:catalogOnly ?catalogOnly .

    # We cheat a bit and attach the topic to the instance instead
    # of the corresponding work
    ?i ?wp ?wo .
    ?wo skos:prefLabel ?wol .

    # Same for the author, entity score and language
    ?i tmp:author ?author .
    ?agent skos:prefLabel ?agentL .
    ?i tmp:associatedCentury ?authorC .
    ?i bdo:associatedTradition ?authorT .

    ?i ?wiip ?wiio .

    ?i tmp:relationType ?rel2 .
    ?i tmp:relationTypeInv ?rel1 .

}
WHERE 
{
    {
      ?R_RES skos:prefLabel ?resL .
    } union {
      {
        ?R_RES ?rel1 ?i .
      } union {
        ?i ?rel2 ?R_RES .
      } union {
        ?it :inCollection ?R_RES .
        ?i :instanceHasItem ?it .
      }
      ?i a bdo:Instance .
      FILTER ( NOT EXISTS {?i :instanceReproductionOf ?reprof })
      ?i ?ip ?io .
      FILTER (?ip != bdo:note && ?ip != bdo:instanceEvent && ?ip != bdo:hasTitle && ?ip != bdo:hasPart
        && ?ip != bdo:colophon && ?ip != bdo:incipit)

      ?iAdm adm:adminAbout ?i .
      ?iAdm adm:status ?status .
      ?iAdm adm:metadataLegal/adm:provider ?provider .
    } union {
      {
        ?R_RES ?rel1 ?i .
      } union {
        ?i ?rel2 ?R_RES .
      } union {
        ?it :inCollection ?R_RES .
        ?i :instanceHasItem ?it .
      }
      ?i a bdo:Instance .
      FILTER ( NOT EXISTS {?i :instanceReproductionOf ?reprof })
      ?i ?ip ?io .
      FILTER (?ip != bdo:note && ?ip != bdo:instanceEvent && ?ip != bdo:hasTitle && ?ip != bdo:hasPart
        && ?ip != bdo:colophon && ?ip != bdo:incipit)

      ?i :inRootInstance ?iR .
      ?iRAdm adm:adminAbout ?iR .
      ?iRAdm adm:status ?status .
      ?iRAdm adm:metadataLegal/adm:provider ?provider .
      ?iR skos:prefLabel ?iRl .
      ?iR ?iRp ?iRo .
      FILTER (?iRp = bdo:script || ?iRp = bdo:printMethod || ?iRp = tmp:thumbnailIIIFService || ?iRp = bdo:publisherLocation || ?iRp = bdo:publisherName)
    } union {
      {
        ?R_RES ?rel1 ?i .
      } union {
        ?i ?rel2 ?R_RES .
      } union {
        ?it :inCollection ?R_RES .
        ?i :instanceHasItem ?it .
      }
      ?i :inRootInstance?/:instanceHasReproduction ?ii .
      FILTER ( NOT EXISTS {?i :instanceReproductionOf ?reprof })
      ?iiAdm adm:adminAbout ?ii ;
               adm:access ?access .
    } union {
      {
        ?R_RES ?rel1 ?i .
      } union {
        ?i ?rel2 ?R_RES .
      } union {
        ?it :inCollection ?R_RES .
        ?i :instanceHasItem ?it .
      }
      ?i bdo:instanceOf ?w .
      FILTER ( NOT EXISTS {?i :instanceReproductionOf ?reprof })
      ?i :instanceEvent ?evt .
      ?evt ?evtp ?evto .
      BIND (IF(?evtp = bdo:onYear || ?evtp = bdo:notBefore, ?evto, 1/0) as ?yearStart)
      BIND (IF(?evtp = bdo:notAfter, ?evto, 1/0) as ?yearEnd)
    } union {
      {
        ?R_RES ?rel1 ?i .
      } union {
        ?i ?rel2 ?R_RES .
      } union {
        ?it :inCollection ?R_RES .
        ?i :instanceHasItem ?it .
      }
      ?i bdo:instanceOf ?w .
      FILTER ( NOT EXISTS {?i :instanceReproductionOf ?reprof })
      ?w bdo:creator ?creator .
      ?creator bdo:role ?role .
      ?creator bdo:agent ?agent .
      VALUES ?agentp { skos:prefLabel tmp:associatedCentury bdo:associatedTradition }
      ?agent ?agentp ?agento .
    
      bind( if(?role IN(bdr:R0ER0014 , bdr:R0ER0016 , bdr:R0ER0019 , bdr:R0ER0025), ?agent, 1/0) as ?author)
      bind( if(?agentp = skos:prefLabel, ?agento, 1/0) as ?agentL)
      bind( if(?agentp = bdo:associatedTradition, ?agento, 1/0) as ?authorT)
      bind( if(?agentp = tmp:associatedCentury && ?role IN(bdr:R0ER0014 , bdr:R0ER0016 , bdr:R0ER0019 , bdr:R0ER0025), ?agento, 1/0) as ?authorC)
    } union {
      {
        ?R_RES ?rel1 ?i .
      } union {
        ?i ?rel2 ?R_RES .
      } union {
        ?it :inCollection ?R_RES .
        ?i :instanceHasItem ?it .
      }
      ?i bdo:instanceOf ?w .
      FILTER ( NOT EXISTS {?i :instanceReproductionOf ?reprof })
      ?w ?wiip ?wiio .
      FILTER(?wiip IN(bdo:language , bdo:catalogInfo, bdo:workIsAbout , bdo:workGenre))
    } union {
      {
        ?R_RES ?rel1 ?i .
      } union {
        ?i ?rel2 ?R_RES .
      } union {
        ?it :inCollection ?R_RES .
        ?i :instanceHasItem ?it .
      }
      ?i bdo:instanceOf ?w .
      FILTER ( NOT EXISTS {?i :instanceReproductionOf ?reprof })
      ?w ?wp ?wo .
      FILTER(?wp IN(bdo:workIsAbout , bdo:workGenre))
      ?wo skos:prefLabel ?wol .
    } union {
      select ?i 
             (max(?iAccessOpen) as ?hasopen) 
             (max(?iImage) as ?hasimage) 
             (max(?iEtext) as ?hasetext)
             (max(?iAccessPossible) as ?haspossible)
             (min(?iCatalogOnly) as ?catalogOnly)
      where {
        {
          ?R_RES ?rel1 ?i .
        } union {
          ?i ?rel2 ?R_RES .
        } union {
          ?it :inCollection ?R_RES .
          ?i :instanceHasItem ?it .
        }
        ?i a bdo:Instance .
        FILTER ( NOT EXISTS {?i :instanceReproductionOf ?reprof })
        ?i :inRootInstance?/:instanceHasReproduction? ?ii .

        ?iiAdm adm:adminAbout ?ii .
        ?iiAdm adm:status bda:StatusReleased .
        
        bind( exists {?ii a bdo:ImageInstance . values ?thp { tmp:thumbnailIIIFService tmp:thumbnailIIIFSelected } ?ii ?thp  ?th } as ?iImage)
        bind( exists {?ii a bdo:EtextInstance} as ?iEtext)

        bind( exists {?iiAdm adm:access bda:AccessOpen} && not exists {?iiAdm adm:syncAgent  bdr:SAOPT} && (?iEtext || ?iImage) as ?iAccessOpen)

        bind( (exists {?iiAdm adm:access ?acc . FILTER(?acc IN(bda:AccessOpen , bda:AccessFairUse , bda:AccessRestrictedSealed))}) && (?iiEtext || ?iiImage) as ?iAccessPossible )

        bind( not exists {?ii a ?rept . FILTER(?rept IN(bdo:ImageInstance, bdo:EtextInstance))} as ?iCatalogOnly )
      } group by ?i 
    }
}
