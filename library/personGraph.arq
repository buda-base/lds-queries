#QueryScope=Person
#QueryReturnType=Graph
#QueryResults=All persons whose various names contain the given L_NAME parameter value.
#QueryParams=L_NAME,LG_NAME
#QueryUrl=/lib/personGraph?L_NAME="'od zer"&LG_NAME=bo-x-ewts

#param.L_NAME.type=string
#param.L_NAME.langTag=LG_NAME
#param.L_NAME.isLucene=true
#param.L_NAME.example="ye shes"

PREFIX tmp: <http://purl.bdrc.io/ontology/tmp/>

CONSTRUCT
{
    ?res tmp:status ?st .
    ?res tmp:matchScore ?sc .
    ?res tmp:labelMatch ?labelMatch .
    ?res tmp:nameMatch ?nameMatch .
    ?res tmp:noteMatch ?noteMatch .
    ?res tmp:isMain true .
    ?resS ?resp ?reso .
    ?res owl:sameAs ?resS .
    ?res tmp:yearStart ?yearStart .
    ?res tmp:provider ?provider .
    ?res tmp:originalRecord ?originalRecord .
    ?res bdo:personName ?name .
    ?res bdo:personEvent ?evt .

    ?evt ?evtp ?evto .
    ?name ?namep ?nameo .

}
WHERE 
{
  {
    {
        (?name ?sc ?nameMatch) text:query ( rdfs:label ?L_NAME "highlight:" ) .
        ?res bdo:personName ?name .
        ?name ?namep ?nameo .
    } union {
        (?res ?sc ?labelMatch) text:query ( bdo:skosLabels ?L_NAME "highlight:" ) .
        ?res a :Person .
    } union {
        (?note ?sc ?noteMatch) text:query ( bdo:noteText ?L_NAME "highlight:" ) .
        ?res bdo:note ?note .
        ?res a :Person .
    }

    ?res owl:sameAs* ?resS .
    VALUES ?resp { skos:altLabel skos:prefLabel bdo:personGender owl:sameAs rdfs:seeAlso tmp:entityScore tmp:associatedCentury bdo:associatedTradition tmp:hasRole }
    ?resS ?resp ?reso .
    ?resAdm adm:adminAbout ?res .
    ?resAdm adm:status ?st .
    ?resAdm adm:metadataLegal/adm:provider ?provider .
    
  } union {

    # get events
    {
        (?name) text:query ( rdfs:label ?L_NAME ) .
        ?res bdo:personName ?name .
        ?name ?namep ?nameo .
    } union {
        (?res) text:query ( bdo:skosLabels ?L_NAME ) .
        ?res a :Person .
    } union {
        (?note) text:query ( bdo:noteText ?L_NAME ) .
        ?res bdo:note ?note .
        ?res a :Person .
    }

    ?res bdo:personEvent ?evt .
    ?evt a ?evtType .
    FILTER (?evtType IN(bdo:PersonBirth , bdo:PersonDeath))
    ?evt ?evtp ?evto .
    BIND (IF(?evtType = bdo:PersonBirth && (?evtp = bdo:onYear || ?evtp = bdo:notBefore), ?evto, 1/0) as ?yearStart)

  }
}
