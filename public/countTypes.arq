#QueryScope=General
#QueryReturnType=Table
#QueryResults=All entities and chunks matching the name
#QueryParams=L_NAME,LG_NAME
#QueryUrl=/countTypes?L_NAME="spyod 'jug"&LG_NAME=bo-x-ewts

#param.L_NAME.type=string
#param.L_NAME.langTag=LG_NAME
#param.L_NAME.isLucene=true
#param.L_NAME.example="spyod 'jug"

select ?type (count (distinct ?e) as ?count) where {
  {
    # (rdfslabel, skoslabels) + type subclassof entity = all direct entities
    {
      (?e) text:query ( bdo:labels ?L_NAME ) .
     } union {
      (?e) text:query ( bdo:extendedStmts ?L_NAME ) .
    } union {
      (?note) text:query ( bdo:noteText ?L_NAME ) .
        ?e bdo:note ?note .
    }
    ?e rdf:type ?type .
    ?type rdfs:subClassOf+ bdo:Entity .
  } union {
    # personName + rdfslabel 
    (?l) text:query ( rdfs:label ?L_NAME) .
    ?e bdo:personName ?l .
    bind(bdo:Person as ?type)
  } union {
    # workTitle + rdfslabel 
    (?l) text:query ( rdfs:label ?L_NAME) .
    ?e bdo:hasTitle ?l .
    bind(bdo:Instance as ?type)
  } union {
    # chunks
        (?e) text:query ( bdo:chunkContents ?L_NAME) .
        bind (bdo:Chunk as ?type) .
  }
  
  FILTER(exists {?eadm adm:adminAbout ?e ; adm:status bda:StatusReleased .} || exists {?e :inRootInstance ?eR . ?eadm adm:adminAbout ?eR ; adm:status bda:StatusReleased .})
  
} group by ?type 
